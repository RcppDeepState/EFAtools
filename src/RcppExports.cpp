// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// factor_corres
Rcpp::List factor_corres(NumericMatrix x, NumericMatrix y, double thresh);
RcppExport SEXP _EFAdiff_factor_corres(SEXP xSEXP, SEXP ySEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(factor_corres(x, y, thresh));
    return rcpp_result_gen;
END_RCPP
}
// paf_iter
Rcpp::List paf_iter(arma::vec h2, double criterion, arma::mat R, const int n_fac, bool abs_eig, int crit_type, int max_iter, arma::uvec idx);
RcppExport SEXP _EFAdiff_paf_iter(SEXP h2SEXP, SEXP criterionSEXP, SEXP RSEXP, SEXP n_facSEXP, SEXP abs_eigSEXP, SEXP crit_typeSEXP, SEXP max_iterSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type h2(h2SEXP);
    Rcpp::traits::input_parameter< double >::type criterion(criterionSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< const int >::type n_fac(n_facSEXP);
    Rcpp::traits::input_parameter< bool >::type abs_eig(abs_eigSEXP);
    Rcpp::traits::input_parameter< int >::type crit_type(crit_typeSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(paf_iter(h2, criterion, R, n_fac, abs_eig, crit_type, max_iter, idx));
    return rcpp_result_gen;
END_RCPP
}
// parallel_sim
arma::mat parallel_sim(const int ndatasets, const int nvars, const int ncases, const int kind);
RcppExport SEXP _EFAdiff_parallel_sim(SEXP ndatasetsSEXP, SEXP nvarsSEXP, SEXP ncasesSEXP, SEXP kindSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type ndatasets(ndatasetsSEXP);
    Rcpp::traits::input_parameter< const int >::type nvars(nvarsSEXP);
    Rcpp::traits::input_parameter< const int >::type ncases(ncasesSEXP);
    Rcpp::traits::input_parameter< const int >::type kind(kindSEXP);
    rcpp_result_gen = Rcpp::wrap(parallel_sim(ndatasets, nvars, ncases, kind));
    return rcpp_result_gen;
END_RCPP
}
// parallel_resample
arma::mat parallel_resample(const int ndatasets, arma::mat data, const int kind, const bool replace);
RcppExport SEXP _EFAdiff_parallel_resample(SEXP ndatasetsSEXP, SEXP dataSEXP, SEXP kindSEXP, SEXP replaceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type ndatasets(ndatasetsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type kind(kindSEXP);
    Rcpp::traits::input_parameter< const bool >::type replace(replaceSEXP);
    rcpp_result_gen = Rcpp::wrap(parallel_resample(ndatasets, data, kind, replace));
    return rcpp_result_gen;
END_RCPP
}
// parallel_summarise
NumericMatrix parallel_summarise(NumericMatrix eig_vals, NumericVector percent, const int ndatasets, const int nvars);
RcppExport SEXP _EFAdiff_parallel_summarise(SEXP eig_valsSEXP, SEXP percentSEXP, SEXP ndatasetsSEXP, SEXP nvarsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type eig_vals(eig_valsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type percent(percentSEXP);
    Rcpp::traits::input_parameter< const int >::type ndatasets(ndatasetsSEXP);
    Rcpp::traits::input_parameter< const int >::type nvars(nvarsSEXP);
    rcpp_result_gen = Rcpp::wrap(parallel_summarise(eig_vals, percent, ndatasets, nvars));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EFAdiff_factor_corres", (DL_FUNC) &_EFAdiff_factor_corres, 3},
    {"_EFAdiff_paf_iter", (DL_FUNC) &_EFAdiff_paf_iter, 8},
    {"_EFAdiff_parallel_sim", (DL_FUNC) &_EFAdiff_parallel_sim, 4},
    {"_EFAdiff_parallel_resample", (DL_FUNC) &_EFAdiff_parallel_resample, 4},
    {"_EFAdiff_parallel_summarise", (DL_FUNC) &_EFAdiff_parallel_summarise, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EFAdiff(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
